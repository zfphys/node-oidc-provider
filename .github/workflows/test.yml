name: Continuous Integration

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron:  0 9 * * 1-5

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12
      - name: Store node version variable
        id: node
        run: |
          echo "::set-output name=version::$(node -v)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ steps.node.outputs.version }}
      - name: Install dependencies
        run: npx panva/npm-install-retry
        if: ${{ steps.node_modules.outputs.cache-hit != 'true' }}
      - run: npm run lint
      - run: npm run lint-ts

  test:
    name: Node Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version:
          - 10.13.0
          - 10
          - 12.0.0
          - 12
          - 13.7.0
          - 13
          - 14.0.0
          - 14
          - 15.0.1
          - 15
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      - name: Store node version variable
        id: node
        run: |
          echo "::set-output name=version::$(node -v)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ steps.node.outputs.version }}
      - name: Install dependencies
        run: npx panva/npm-install-retry
        if: ${{ steps.node_modules.outputs.cache-hit != 'true' }}
      - run: npm run ci

  conformance-suite:
    runs-on: ubuntu-latest
    env:
      VERSION: release-v4.0.10
      SUITE_BASE_URL: https://localhost.emobix.co.uk:8443
      SETUP: ${{ matrix.setup }}
    strategy:
      matrix:
        setup:
          - '{"plan":"oidcc-basic-certification-test-plan","server_metadata":"discovery","client_registration":"dynamic_client"}'
          - '{"plan":"oidcc-hybrid-certification-test-plan","server_metadata":"discovery","client_registration":"dynamic_client"}'
          - '{"plan":"oidcc-implicit-certification-test-plan","server_metadata":"discovery","client_registration":"dynamic_client"}'
          - '{"plan":"oidcc-config-certification-test-plan"}'
          - '{"plan":"oidcc-dynamic-certification-test-plan","response_type":"code","skip":"oidcc-server-rotate-keys"}'
          - '{"plan":"oidcc-dynamic-certification-test-plan","response_type":"id_token","skip":"oidcc-server-rotate-keys"}'
          - '{"plan":"oidcc-dynamic-certification-test-plan","response_type":"id_token token","skip":"oidcc-server-rotate-keys"}'
          - '{"plan":"oidcc-dynamic-certification-test-plan","response_type":"code id_token","skip":"oidcc-server-rotate-keys"}'
          - '{"plan":"oidcc-dynamic-certification-test-plan","response_type":"code token","skip":"oidcc-server-rotate-keys"}'
          - '{"plan":"oidcc-dynamic-certification-test-plan","response_type":"code id_token token","skip":"oidcc-server-rotate-keys"}'
          - '{"plan":"oidcc-backchannel-rp-initiated-logout-certification-test-plan","response_type":"code","client_registration":"dynamic_client"}'
          - '{"plan":"oidcc-frontchannel-rp-initiated-logout-certification-test-plan","response_type":"code","client_registration":"dynamic_client"}'
          - '{"plan":"oidcc-rp-initiated-logout-certification-test-plan","response_type":"code","client_registration":"dynamic_client"}'
          - '{"plan":"oidcc-session-management-certification-test-plan","response_type":"code","client_registration":"dynamic_client","skip":"oidcc-session-management-rp-initiated-logout"}'
          - '{"plan":"fapi-rw-id2-test-plan","configuration":"./certification/fapi/pkjwt.json","client_auth_type":"private_key_jwt","fapi_profile":"plain_fapi","fapi_response_mode":"plain_response"}'
          - '{"plan":"fapi-rw-id2-test-plan","configuration":"./certification/fapi/pkjwt.json","client_auth_type":"private_key_jwt","fapi_profile":"plain_fapi","fapi_response_mode":"jarm"}'
          - '{"plan":"fapi-rw-id2-test-plan","configuration":"./certification/fapi/mtls.json","client_auth_type":"mtls","fapi_profile":"plain_fapi","fapi_response_mode":"plain_response"}'
          - '{"plan":"fapi-rw-id2-test-plan","configuration":"./certification/fapi/mtls.json","client_auth_type":"mtls","fapi_profile":"plain_fapi","fapi_response_mode":"jarm"}'
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12
      - name: Store node version variable
        id: node
        run: |
          echo "::set-output name=version::$(node -v)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.json') }}-${{ steps.node.outputs.version }}
      - name: Install dependencies
        run: npx panva/npm-install-retry
        if: ${{ steps.node_modules.outputs.cache-hit != 'true' }}
      - name: Run oidc-provider (OIDC)
        run: node certification/docker &
        if: ${{ startsWith(fromJSON(matrix.setup).plan, 'oidcc') }}
        env:
          PORT: 3000
          ISSUER: https://172.17.0.1:3000
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Run oidc-provider (FAPI)
        run: node certification/fapi &
        if: ${{ startsWith(fromJSON(matrix.setup).plan, 'fapi') }}
        env:
          ISSUER: https://172.17.0.1:3001
          PORT: 3001
          NODE_OPTIONS: --tls-cipher-list="ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384"
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Cache Conformance Suite Build
        uses: actions/cache@v2
        id: cache
        with:
          path: ./conformance-suite
          key: suite-${{ env.VERSION }}
      - name: Conformance Suite Build
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        env:
          MAVEN_CACHE: ./m2
        run: |
          git clone --depth 1 --single-branch --branch $VERSION https://gitlab.com/openid/conformance-suite.git
          cd conformance-suite
          sed -i -e 's/localhost/localhost.emobix.co.uk/g' src/main/resources/application.properties
          sed -i -e 's/-B clean/-B -DskipTests=true/g' builder-compose.yml
          docker-compose -f builder-compose.yml run builder
      - name: Run Conformance Suite
        run: |
          cd conformance-suite
          docker-compose -f docker-compose-dev.yml up -d
          while ! curl -skfail https://localhost.emobix.co.uk:8443/api/runner/available >/dev/null; do sleep 2; done
      - name: Adjust configuration files for CI
        run: |
          sed -i -e 's/op.panva.cz/172.17.0.1:3000/g' certification/plan.json
          sed -i -e 's/mtls.fapi.panva.cz/172.17.0.1:3001/g' certification/fapi/mtls.json
          sed -i -e 's/fapi.panva.cz/172.17.0.1:3001/g' certification/fapi/mtls.json
          sed -i -e 's/mtls.fapi.panva.cz/172.17.0.1:3001/g' certification/fapi/pkjwt.json
          sed -i -e 's/fapi.panva.cz/172.17.0.1:3001/g' certification/fapi/pkjwt.json
      - name: Run ${{ matrix.setup }}
        run: npx mocha --delay --timeout 0 --retries 0 certification/runner
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        with:
          path: export-*.zip
          name: oidc certification html results
        if: ${{ always() }}
      - name: Stop Conformance Suite
        run: |
          cd conformance-suite
          docker-compose -f docker-compose-dev.yml down
          sudo rm -rf mongo

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'panva/node-oidc-provider' }}
    runs-on: ubuntu-latest
    needs:
      - test
      - conformance-suite
    strategy:
      matrix:
        app:
          - radiant-refuge-93411
          - powerful-cove-31049
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.x
      - run: gem install dpl-heroku -v 1.10.14
      - run: dpl --provider=heroku --strategy=api --api-key=${{ secrets.HEROKU_AUTH_TOKEN }} --app=${{ matrix.app }}
